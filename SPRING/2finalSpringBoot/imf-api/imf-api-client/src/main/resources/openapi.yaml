openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /imf/api/missions:
    post:
      tags:
      - controller
      operationId: createMission
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMissionRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MissionDTO"
  /imf/api/missions/{id}:
    patch:
      tags:
      - controller
      operationId: updateMissionStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeStatusRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/MissionDTO"
  /imf/api/teams/name/{teamName}/agents:
    get:
      tags:
      - controller
      operationId: getAgentsByTeamName
      parameters:
      - name: teamName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgentDTO"
  /imf/api/getAllMissions:
    get:
      tags:
      - controller
      operationId: getAllMissions
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MissionDTO"
  /imf/api/agents/{deceased}:
    get:
      tags:
      - controller
      operationId: getAgentsDeceased
      parameters:
      - name: deceased
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgentDTO"
  /:
    get:
      tags:
      - test-controller
      operationId: test
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    CreateMissionRequestDTO:
      type: object
      properties:
        missionDate:
          type: string
          format: date-time
        description:
          type: string
        agentId:
          type: integer
          format: int64
      required:
      - agentId
      - description
      - missionDate
    Agent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        level:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - TOP
        team:
          $ref: "#/components/schemas/Team"
        deceased:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MissionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        missionDate:
          type: string
          format: date-time
        agent:
          $ref: "#/components/schemas/Agent"
        status:
          type: string
          enum:
          - ASSIGNED
          - IN_PROGRESS
          - FAILED
          - COMPLETED
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        baseLocation:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ChangeStatusRequestDTO:
      type: object
      properties:
        newStatus:
          type: string
          enum:
          - ASSIGNED
          - IN_PROGRESS
          - FAILED
          - COMPLETED
        agentDeceased:
          type: boolean
      required:
      - agentDeceased
      - newStatus
    AgentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        level:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - TOP
        team:
          $ref: "#/components/schemas/Team"
        deceased:
          type: boolean

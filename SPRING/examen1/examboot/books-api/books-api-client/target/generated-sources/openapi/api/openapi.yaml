openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
- description: Generated server url
  url: http://localhost:8080
paths:
  /books/create:
    post:
      operationId: createBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateBookDTO'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookDTO'
          description: OK
      tags:
      - controller
      x-content-type: application/json
      x-accepts:
      - '*/*'
  /books/maxAwards:
    get:
      operationId: getMaxAwards
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/AuthorDTO'
                type: array
          description: OK
      tags:
      - controller
      x-accepts:
      - '*/*'
  /books/category/{genre}:
    get:
      operationId: getAllBooksByGenre
      parameters:
      - explode: false
        in: path
        name: genre
        required: true
        schema:
          enum:
          - NOVEL
          - FANTASY
          - ROMANCE
          - PROGRAMMING
          type: string
        style: simple
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/BookDTO'
                type: array
          description: OK
      tags:
      - controller
      x-accepts:
      - '*/*'
  /:
    get:
      operationId: test
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: OK
      tags:
      - test-controller
      x-accepts:
      - '*/*'
components:
  schemas:
    RequestCreateBookDTO:
      example:
        publishYear: 0
        isbn: isbn
        genre: NOVEL
        title: title
        authorId: 6
      properties:
        title:
          type: string
        isbn:
          type: string
        genre:
          enum:
          - NOVEL
          - FANTASY
          - ROMANCE
          - PROGRAMMING
          type: string
        publishYear:
          format: int32
          type: integer
        authorId:
          format: int64
          type: integer
      required:
      - authorId
      - isbn
      - publishYear
      - title
      type: object
    Author:
      example:
        nationality: nationality
        awards: 5
        name: name
        id: 1
        birthDate: 2000-01-23
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        nationality:
          type: string
        birthDate:
          format: date
          type: string
        awards:
          format: int32
          type: integer
      type: object
    BookDTO:
      example:
        publishYear: 6
        author:
          nationality: nationality
          awards: 5
          name: name
          id: 1
          birthDate: 2000-01-23
        isbn: isbn
        genre: NOVEL
        id: 0
        title: title
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
        isbn:
          type: string
        genre:
          enum:
          - NOVEL
          - FANTASY
          - ROMANCE
          - PROGRAMMING
          type: string
        publishYear:
          format: int32
          type: integer
        author:
          $ref: '#/components/schemas/Author'
      type: object
    AuthorDTO:
      example:
        nationality: nationality
        awards: 6
        name: name
        id: 0
        birthDate: 2000-01-23
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
        nationality:
          type: string
        birthDate:
          format: date
          type: string
        awards:
          format: int32
          type: integer
      type: object


openapi: 3.0.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /JonHealth/updateAppointment:
    post:
      tags:
      - controller
      operationId: updateAppointment
      parameters:
      - name: appointmentStatus
        in: query
        required: true
        schema:
          type: string
          enum:
          - SCHEDULED
          - COMPLETED
          - CANCELLED
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              format: int64
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppointmentDTO"
  /JonHealth/create:
    post:
      tags:
      - controller
      operationId: createAppointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCreateAppointmentDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AppointmentDTO"
  /:
    get:
      tags:
      - test-controller
      operationId: test
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /JonHealth/listOfPatiens/{doctorId}:
    get:
      tags:
      - controller
      operationId: getPatiensByDoctor
      parameters:
      - name: doctorId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PatientDTO"
  /JonHealth/appointmentsById/{patientId}:
    get:
      tags:
      - controller
      operationId: getAppointmentsByPatient
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
components:
  schemas:
    AppointmentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        patient:
          $ref: "#/components/schemas/Patient"
        doctor:
          $ref: "#/components/schemas/Doctor"
        appointmentDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - SCHEDULED
          - COMPLETED
          - CANCELLED
        notes:
          type: string
    Doctor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        speciality:
          type: string
          enum:
          - CARDIOLOGY
          - PEDIATRICS
          - DERMATOLOGY
          - NEUROLOGY
        dni:
          type: string
        email:
          type: string
    Patient:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dni:
          type: string
        email:
          type: string
        medicalHistory:
          type: string
    RequestCreateAppointmentDTO:
      type: object
      properties:
        patientId:
          type: integer
          format: int64
        doctorId:
          type: integer
          format: int64
        appointmentDate:
          type: string
          format: date-time
      required:
      - appointmentDate
      - doctorId
      - patientId
    PatientDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dni:
          type: string
        email:
          type: string
        medicalHistory:
          type: string

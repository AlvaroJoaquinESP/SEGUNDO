/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.generator.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import org.generator.model.Doctor;
import org.generator.model.Patient;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AppointmentDTO
 */
@JsonPropertyOrder({
  AppointmentDTO.JSON_PROPERTY_ID,
  AppointmentDTO.JSON_PROPERTY_PATIENT,
  AppointmentDTO.JSON_PROPERTY_DOCTOR,
  AppointmentDTO.JSON_PROPERTY_APPOINTMENT_DATE,
  AppointmentDTO.JSON_PROPERTY_STATUS,
  AppointmentDTO.JSON_PROPERTY_NOTES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-12T23:58:19.133047400+02:00[Europe/Madrid]", comments = "Generator version: 7.10.0")
public class AppointmentDTO implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_PATIENT = "patient";
  @jakarta.annotation.Nullable
  private Patient patient;

  public static final String JSON_PROPERTY_DOCTOR = "doctor";
  @jakarta.annotation.Nullable
  private Doctor doctor;

  public static final String JSON_PROPERTY_APPOINTMENT_DATE = "appointmentDate";
  @jakarta.annotation.Nullable
  private OffsetDateTime appointmentDate;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SCHEDULED(String.valueOf("SCHEDULED")),
    
    COMPLETED(String.valueOf("COMPLETED")),
    
    CANCELLED(String.valueOf("CANCELLED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nullable
  private StatusEnum status;

  public static final String JSON_PROPERTY_NOTES = "notes";
  @jakarta.annotation.Nullable
  private String notes;

  public AppointmentDTO() {
  }

  public AppointmentDTO id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }

  public AppointmentDTO patient(@jakarta.annotation.Nullable Patient patient) {
    
    this.patient = patient;
    return this;
  }

  /**
   * Get patient
   * @return patient
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PATIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Patient getPatient() {
    return patient;
  }


  @JsonProperty(JSON_PROPERTY_PATIENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPatient(@jakarta.annotation.Nullable Patient patient) {
    this.patient = patient;
  }

  public AppointmentDTO doctor(@jakarta.annotation.Nullable Doctor doctor) {
    
    this.doctor = doctor;
    return this;
  }

  /**
   * Get doctor
   * @return doctor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Doctor getDoctor() {
    return doctor;
  }


  @JsonProperty(JSON_PROPERTY_DOCTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoctor(@jakarta.annotation.Nullable Doctor doctor) {
    this.doctor = doctor;
  }

  public AppointmentDTO appointmentDate(@jakarta.annotation.Nullable OffsetDateTime appointmentDate) {
    
    this.appointmentDate = appointmentDate;
    return this;
  }

  /**
   * Get appointmentDate
   * @return appointmentDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPOINTMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAppointmentDate() {
    return appointmentDate;
  }


  @JsonProperty(JSON_PROPERTY_APPOINTMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAppointmentDate(@jakarta.annotation.Nullable OffsetDateTime appointmentDate) {
    this.appointmentDate = appointmentDate;
  }

  public AppointmentDTO status(@jakarta.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@jakarta.annotation.Nullable StatusEnum status) {
    this.status = status;
  }

  public AppointmentDTO notes(@jakarta.annotation.Nullable String notes) {
    
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppointmentDTO appointmentDTO = (AppointmentDTO) o;
    return Objects.equals(this.id, appointmentDTO.id) &&
        Objects.equals(this.patient, appointmentDTO.patient) &&
        Objects.equals(this.doctor, appointmentDTO.doctor) &&
        Objects.equals(this.appointmentDate, appointmentDTO.appointmentDate) &&
        Objects.equals(this.status, appointmentDTO.status) &&
        Objects.equals(this.notes, appointmentDTO.notes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, patient, doctor, appointmentDate, status, notes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppointmentDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    patient: ").append(toIndentedString(patient)).append("\n");
    sb.append("    doctor: ").append(toIndentedString(doctor)).append("\n");
    sb.append("    appointmentDate: ").append(toIndentedString(appointmentDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

